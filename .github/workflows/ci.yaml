name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

permissions:
  contents: read

jobs:
  Test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - name: Run Tests
      run: cargo test
    - name: Run Tests (release build)
      run: cargo test --release
  Nightly:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
    - name: Run Tests
      run: cargo test
    - name: Run Tests (nightly feature)
      run: cargo test --features nightly
    - name: Run Tests (release build)
      run: cargo test --release
    - name: Run Tests (nightly feature, release build)
      run: cargo test --features nightly --release
  Clippy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: clippy
    - name: Run Clippy
      run: make clippy
  Docs:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
    - name: Check docs
      run: RUSTDOCFLAGS="-D warnings" cargo doc --no-deps
  Rustfmt:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - name: Check formatting
      run: cargo fmt --all -- --check
  Sanitizer:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        sanitizer: [address] # TODO: enable thread, memory, leak.
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: rust-src
    - name: Run tests with sanitizer
      run: make test_sanitizer sanitizer=${{ matrix.sanitizer }}
